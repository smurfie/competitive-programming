(() => {
  function solve(input) {
    var lines = Utils.read(input);
    var map = lines.map((i) => i.split(""));
    var iterations = 1000000000;
    var dict = {};

    var equals = false;
    for (var i = 0; i < iterations && !equals; i++) {
      var map2 = Utils.duplicate(map);
      for (var j = 0; j < map.length; j++) {
        for (var k = 0; k < map[j].length; k++) {
          var sor = sorrounded(map, j, k);
          switch (map[j][k]) {
            case ".":
              map2[j][k] = sor.filter((i) => i == "|").length > 2 ? "|" : ".";
              break;
            case "|":
              map2[j][k] = sor.filter((i) => i == "#").length > 2 ? "#" : "|";
              break;
            case "#":
              map2[j][k] =
                sor.filter((i) => i == "#").length > 0 &&
                sor.filter((i) => i == "|").length > 0
                  ? "#"
                  : ".";
              break;
          }
        }
      }
      map = map2;
      var hash = JSON.stringify(map);
      if (dict[hash]) {
        var modulus = i - dict[hash];
        while (i + modulus < iterations) i += modulus;
      } else dict[hash] = i;
    }

    var woods = map.reduce((a, b) => a + b.filter((i) => i == "|").length, 0);
    var lumberyards = map.reduce(
      (a, b) => a + b.filter((i) => i == "#").length,
      0
    );
    return woods * lumberyards;
  }

  function sorrounded(map, x, y) {
    var res = [];
    if (x > 0 && y > 0) res.push(map[x - 1][y - 1]);
    if (x > 0) res.push(map[x - 1][y]);
    if (x > 0 && y < map[x].length - 1) res.push(map[x - 1][y + 1]);
    if (y > 0) res.push(map[x][y - 1]);
    if (y < map[x].length - 1) res.push(map[x][y + 1]);
    if (x < map.length - 1 && y > 0) res.push(map[x + 1][y - 1]);
    if (x < map.length - 1) res.push(map[x + 1][y]);
    if (x < map.length - 1 && y < map[x].length - 1)
      res.push(map[x + 1][y + 1]);
    return res;
  }

  function compare(map1, map2) {
    for (var i = 0; i < map1.length; i++)
      for (var j = 0; j < map1[i].length; j++)
        if (map1[i][j] != map2[i][j]) return false;
    return true;
  }

  var dataset = [];

  dataset.push({
    input: `#...|#...#.....#...|#.#.|...|......|#|...|||#..||.
.|..#.....#.|...#.##.#.#||.#...|#...#.|.|.#..||...
.#..#.###|.#..|.......#...|.#|..#......|.#..#.....
...#.#|#.#.#.|.|#.#.#.#.##....#.......|##||..#.|.#
..##...#.....|||.#|.#..|.#.#...|....#....#........
.#.#...#|...#........|.#..#.|#.#.#|.|.....##...#|#
#......|....||.##..#|...|..|||....##..|.#.|.###|..
...#|....|...........#||..|...|#|....||||..#|..#..
|..|....#....###....|.|..#.#|.|....#....#.#.#...||
..#.#...#.#...|||#|#..|..#.||..#......|..##...|.#|
.|#.#.||.##..#..#.|.#......|.###.#|.#|....|...##..
.|..|#|.....||...#.|.#.|#|##|..|..|||..||#......|.
#.....||#.|..##....|#|||..|....|..#.#.#|#|#...|..|
..#|..........|#..#..#|.#..|...##|.#..#...|#|..#.|
#|....#...|.##..#.|#.|.|##.........|.|.......#...|
.....|.....||###.#.##..|....|..|||##|.|#.|.||#..#.
|..#.||#|#.#.|##.|||#.|###.#|#...##...#.|.....|..|
.||...#.|.....|#|...|....#......#....|.|.|||#.#..#
...|..#....|.||||..|..|........|..#.......#..#.|..
##||#|||..........|##.#.#....###..|..||...|.#.|..#
|##||#....#....|.......#......||...#..#.||..#.|#..
.##.#..|.|#.##.....##|..#......#.#..|...#...#...|.
.#...#......#.##..##.|#.#.#.|.|#.||....##|..|....|
#...#..#||#.||....#|..|....#..|.#|#|###|||....|..|
..|.|||.#||.#|........#....|.##||||.|##..#........
.......|#.#|.|..|#|.#........|#|.||.....##.||||..#
..|...##...#..||#|.##|..#..|...##..#.|||#|#|||.||.
.#..|..#....##........|..##||.#..||#.....###.....|
##......|#.|...#..#||..||||...|..||.|...|..#...#.#
#.|...#.#..#.....#..|.|.#.....#|.#.........#.#....
.....#...|..##|....#|..||#....||#...#.#.||.||#..|#
....#...#..|||.#...#.|.....|.....||.#...||#.....#.
....#....|....#...##|..|||||#........|....##..#.##
.#...#.#|##.|..||..||......#||..|..|#...##.#.|##..
..#.#.#.#.||#.|###.....|#.#.......#....|#|.#..#.##
..###....|.#..|..##.#.||....|..#..||.|.###.|#..#|.
#...|.#..|..#..#.....|..||.|#..#||.|..||.#.||.#.|#
.#|...|....#..|.|..#....#|#.|.....|.|.#........|..
.#.#|..#..#....#..###..#|..#.|#|..|.....|.|#|...|#
.....|#.#|......####..|..#...#..|##.|..|.||#.#.|.|
|.....|..#.|....#...|..#....#|##|.#.#..#......#|.|
....|.....|#.|#.....#....|.#||...#...|.||.#...#|.#
.......#|..........##|#|.#|#.|.|.|.|#.....#....||.
|#|#....##.##||.#.#.#.......|||..#....|.|...|.|.|#
...#.#...#|#...#..||...|.##|..#.....##|#...|.|..|.
....#|.|..||.........||.......|..#.......##|.....#
..|.||.||#.#.#.|....|#||.#|..#...|.##|..##....#|.|
......#.||.#||..........#....#..|..........|...#.|
..||...|...............|.#|..#.#|....||.....|...|.
...##.|#.#..||.##..|#.....|.#...##|...............`,
    output: 189168
  });

  Utils.check(solve, dataset, "18b");
})();
