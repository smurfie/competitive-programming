(() => {
  function solve(input, phases) {
    var arr = input.split("").map((i) => parseInt(i));
    var pattern = [0, 1, 0, -1];
    for (var i = 0; i < phases; i++) {
      arr = fft(arr, pattern);
    }

    return arr.join("").substring(0, 8);
  }

  function fft(arr, pattern) {
    var arr2 = [];
    for (var i = 0; i < arr.length; i++) {
      var sum = 0;
      for (var j = 0; j < arr.length; j++) {
        var index = Math.floor((j + 1) / (i + 1)) % pattern.length;
        sum += arr[j] * pattern[index];
      }
      arr2[i] = Math.abs(sum) % 10;
    }
    return arr2;
  }

  var dataset = [];

  dataset.push({
    input: `12345678`,
    phases: 1,
    output: "48226158"
  });

  dataset.push({
    input: `12345678`,
    phases: 4,
    output: "01029498"
  });

  dataset.push({
    input: `80871224585914546619083218645595`,
    phases: 100,
    output: "24176176"
  });

  dataset.push({
    input: `19617804207202209144916044189917`,
    phases: 100,
    output: "73745418"
  });

  dataset.push({
    input: `69317163492948606335995924319873`,
    phases: 100,
    output: "52432133"
  });

  dataset.push({
    input: ``,
    phases: 100,
    output: "50053207"
  });

  Utils.check(solve, dataset, "16a");
})();
